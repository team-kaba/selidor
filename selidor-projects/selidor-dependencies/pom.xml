<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>pw.itr0.selidor</groupId>
    <artifactId>selidor-projects</artifactId>
    <version>${revision}</version>
    <relativePath>..</relativePath>
  </parent>

  <artifactId>selidor-dependencies</artifactId>
  <packaging>pom</packaging>

  <name>${project.artifactId}</name>
  <description>Selidor Projects: Dependencies</description>
  <url>${git.url}</url>
  <inceptionYear>2019</inceptionYear>

  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0</url>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>ryotan</id>
      <name>Ryo Tanaka</name>
      <email>ryotan@ucb-jp.net</email>
      <roles>
        <role>developer</role>
      </roles>
    </developer>
  </developers>

  <scm>
    <url>${git.url}/selidor-projects/${project.artifactId}</url>
    <connection>${git.connection}</connection>
    <developerConnection>${git.developerConnection}</developerConnection>
    <tag>${git.refname}</tag>
  </scm>

  <properties>
    <!-- Selidor -->
    <!-- Selidorのバージョンは${revision}を利用するので、propertiesでは設定しません。 -->

    <!-- 3rd Party Libraries -->
    <archunit.version>0.22.0</archunit.version>
    <assertj-core.version>3.21.0</assertj-core.version>
    <cloudevents-api.version>2.2.0</cloudevents-api.version>
    <checkerframework.version>3.19.0</checkerframework.version>
    <database-rider.version>1.28.0</database-rider.version>
    <dbunit.version>2.7.0</dbunit.version>
    <doma.boot.version>1.5.0</doma.boot.version>
    <doma.version>2.44.3</doma.version>
    <flyway-dbunit-test.version>6.4.0</flyway-dbunit-test.version>
    <jsr305.version>3.0.2</jsr305.version>
    <junit-jupiter.version>5.8.1</junit-jupiter.version>
    <lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>
    <mapstruct.version>1.4.2.Final</mapstruct.version>
    <mybatis-spring-boot.version>2.2.0</mybatis-spring-boot.version>
    <okhttp.version>4.9.2</okhttp.version>
    <org.json.version>20210307</org.json.version>
    <retrofit.version>2.9.0</retrofit.version>
    <retrofit2-reactor-adapter.version>2.1.0</retrofit2-reactor-adapter.version>
    <spring-boot.version>2.5.12</spring-boot.version>
    <spring-cloud.version>2023.0.3</spring-cloud.version>
    <spring-cloud-gcp.version>2.0.4</spring-cloud-gcp.version>
    <spring-test-dbunit.version>1.3.0</spring-test-dbunit.version>
    <testcontainers.version>1.16.0</testcontainers.version>
    <twitter4j.version>4.0.7</twitter4j.version>

    <!-- Maven Plugins -->
    <!-- spring-boot-dependencies と同じバージョンを指定しているプラグイン -->
    <flatten-maven-plugin.version>1.2.7</flatten-maven-plugin.version>
    <git-commit-id-plugin.version>4.9.10</git-commit-id-plugin.version>
    <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
    <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
    <maven-enforcer-plugin.version>3.0.0</maven-enforcer-plugin.version>
    <maven-install-plugin.version>2.5.2</maven-install-plugin.version>
    <maven-jar-plugin.version>3.2.0</maven-jar-plugin.version>
    <maven-resources-plugin.version>3.2.0</maven-resources-plugin.version>
    <maven-source-plugin.version>3.2.1</maven-source-plugin.version>
    <maven-war-plugin.version>3.3.2</maven-war-plugin.version>
    <partial-build-plugin.version>2.7</partial-build-plugin.version>
    <versions-maven-plugin.version>2.8.1</versions-maven-plugin.version>
    <xml-maven-plugin.version>1.0.2</xml-maven-plugin.version>

    <!-- spring-boot-dependencies と違うバージョンを指定しているプラグイン -->
    <!-- useModulePathを無効にしてテストを実行したいので、このオプションが実装されているバージョンを指定しています。 -->
    <maven-failsafe-plugin.version>${maven-surefire-plugin.version}</maven-failsafe-plugin.version>
    <maven-surefire-plugin.version>3.0.0-M5</maven-surefire-plugin.version>

    <!-- spring-boot-dependencies にないプラグイン -->
    <dependency-check-maven.version>6.5.0</dependency-check-maven.version>
    <duplicate-finder-maven-plugin.version>1.5.0</duplicate-finder-maven-plugin.version>
    <fmt-maven-plugin.version>2.12</fmt-maven-plugin.version>
    <jacoco-maven-plugin.version>0.8.7</jacoco-maven-plugin.version>

    <!-- [build] Root Aggregator への相対パス。共通の静的解析設定ファイルなどが配置されています。 -->
    <main.basedir>../..</main.basedir>

    <!-- dependenciesをparentに持つPOMファイルはデプロイ対象とする -->
    <disable.deploy>false</disable.deploy>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- Selidor -->
      <dependency>
        <groupId>pw.itr0.selidor</groupId>
        <artifactId>selidor-autoconfigure</artifactId>
        <version>${revision}</version>
      </dependency>
      <dependency>
        <groupId>pw.itr0.selidor</groupId>
        <artifactId>selidor-core</artifactId>
        <version>${revision}</version>
      </dependency>
      <dependency>
        <groupId>pw.itr0.selidor</groupId>
        <artifactId>selidor-identifier</artifactId>
        <version>${revision}</version>
      </dependency>
      <dependency>
        <groupId>pw.itr0.selidor</groupId>
        <artifactId>selidor-typed-value</artifactId>
        <version>${revision}</version>
      </dependency>
      <dependency>
        <groupId>pw.itr0.selidor</groupId>
        <artifactId>selidor-typed-value-mapstruct</artifactId>
        <version>${revision}</version>
      </dependency>
      <dependency>
        <groupId>pw.itr0.selidor</groupId>
        <artifactId>selidor-http-client</artifactId>
        <version>${revision}</version>
      </dependency>

      <!-- Spring -->
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring-boot.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>com.google.cloud</groupId>
        <artifactId>spring-cloud-gcp-dependencies</artifactId>
        <version>${spring-cloud-gcp.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- ArchUnit -->
      <dependency>
        <groupId>com.tngtech.archunit</groupId>
        <artifactId>archunit-junit5</artifactId>
        <version>${archunit.version}</version>
      </dependency>

      <!-- AssertJ -->
      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>${assertj-core.version}</version>
      </dependency>

      <!-- CloudEvents -->
      <dependency>
        <groupId>io.cloudevents</groupId>
        <artifactId>cloudevents-api</artifactId>
        <version>${cloudevents-api.version}</version>
      </dependency>

      <!-- Checker Framework -->
      <dependency>
        <groupId>org.checkerframework</groupId>
        <artifactId>checker-qual</artifactId>
        <version>${checkerframework.version}</version>
      </dependency>

      <!-- Doma -->
      <dependency>
        <groupId>org.seasar.doma.boot</groupId>
        <artifactId>doma-spring-boot-starter</artifactId>
        <version>${doma.boot.version}</version>
      </dependency>
      <dependency>
        <groupId>org.seasar.doma.boot</groupId>
        <artifactId>doma-spring-boot-autoconfigure</artifactId>
        <version>${doma.boot.version}</version>
      </dependency>
      <dependency>
        <groupId>org.seasar.doma</groupId>
        <artifactId>doma-processor</artifactId>
        <version>${doma.version}</version>
      </dependency>

      <!-- JSON -->
      <dependency>
        <groupId>org.json</groupId>
        <artifactId>json</artifactId>
        <version>${org.json.version}</version>
      </dependency>

      <!-- MapStruct -->
      <dependency>
        <groupId>org.mapstruct</groupId>
        <artifactId>mapstruct</artifactId>
        <version>${mapstruct.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mapstruct</groupId>
        <artifactId>mapstruct-processor</artifactId>
        <version>${mapstruct.version}</version>
      </dependency>
      <dependency> <!-- Required to use MapStruct together with Lombok. See: https://mapstruct.org/faq/#Can-I-use-MapStruct-together-with-Project-Lombok -->
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok-mapstruct-binding</artifactId>
        <version>${lombok-mapstruct-binding.version}</version>
      </dependency>

      <!-- MyBatis -->
      <dependency>
        <groupId>org.mybatis.spring.boot</groupId>
        <artifactId>mybatis-spring-boot</artifactId>
        <version>${mybatis-spring-boot.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>

      <!-- OkHttp / Retrofit -->
      <dependency>
        <groupId>com.squareup.okhttp3</groupId>
        <artifactId>okhttp-bom</artifactId>
        <version>${okhttp.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>com.squareup.retrofit2</groupId>
        <artifactId>retrofit</artifactId>
        <version>${retrofit.version}</version>
      </dependency>
      <dependency>
        <groupId>com.squareup.retrofit2</groupId>
        <artifactId>converter-jackson</artifactId>
        <version>${retrofit.version}</version>
      </dependency>
      <dependency>
        <groupId>com.squareup.retrofit2</groupId>
        <artifactId>converter-scalars</artifactId>
        <version>${retrofit.version}</version>
      </dependency>
      <dependency>
        <groupId>com.squareup.retrofit2</groupId>
        <artifactId>retrofit-mock</artifactId>
        <version>${retrofit.version}</version>
      </dependency>
      <dependency>
        <groupId>com.jakewharton.retrofit</groupId>
        <artifactId>retrofit2-reactor-adapter</artifactId>
        <version>${retrofit2-reactor-adapter.version}</version>
      </dependency>

      <!-- Twitter4J -->
      <dependency>
        <groupId>org.twitter4j</groupId>
        <artifactId>twitter4j-core</artifactId>
        <version>${twitter4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.twitter4j</groupId>
        <artifactId>twitter4j-stream</artifactId>
        <version>${twitter4j.version}</version>
      </dependency>

      <!-- JSR305 Annotations -->
      <dependency>
        <groupId>com.google.code.findbugs</groupId>
        <artifactId>jsr305</artifactId>
        <version>${jsr305.version}</version>
      </dependency>

      <!-- JUnit -->
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>${junit-jupiter.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>

      <!-- Testcontainers -->
      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>testcontainers-bom</artifactId>
        <version>${testcontainers.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>

      <!-- DBUnit -->
      <dependency>
        <groupId>org.dbunit</groupId>
        <artifactId>dbunit</artifactId>
        <version>${dbunit.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.springtestdbunit</groupId>
        <artifactId>spring-test-dbunit</artifactId>
        <version>${spring-test-dbunit.version}</version>
      </dependency>
      <dependency>
        <groupId>org.flywaydb.flyway-test-extensions</groupId>
        <artifactId>flyway-dbunit-test</artifactId>
        <version>${flyway-dbunit-test.version}</version>
      </dependency>

      <!-- Database Rider -->
      <dependency>
        <groupId>com.github.database-rider</groupId>
        <artifactId>rider-core</artifactId>
        <version>${database-rider.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.database-rider</groupId>
        <artifactId>rider-spring</artifactId>
        <version>${database-rider.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.database-rider</groupId>
        <artifactId>rider-cdi</artifactId>
        <version>${database-rider.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.database-rider</groupId>
        <artifactId>rider-junit5</artifactId>
        <version>${database-rider.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.database-rider</groupId>
        <artifactId>rider-cucumber</artifactId>
        <version>${database-rider.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <!-- 依存ライブラリのCVE脆弱性チェック -->
        <plugin>
          <groupId>org.owasp</groupId>
          <artifactId>dependency-check-maven</artifactId>
          <version>${dependency-check-maven.version}</version>
        </plugin>
        <!-- クラスパス上で重複しているクラスやリソースの検出 -->
        <plugin>
          <groupId>org.basepom.maven</groupId>
          <artifactId>duplicate-finder-maven-plugin</artifactId>
          <version>${duplicate-finder-maven-plugin.version}</version>
        </plugin>
        <!-- POMファイルの整理 -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>flatten-maven-plugin</artifactId>
          <version>${flatten-maven-plugin.version}</version>
        </plugin>
        <!-- コードフォーマッタ -->
        <plugin>
          <groupId>com.coveo</groupId>
          <artifactId>fmt-maven-plugin</artifactId>
          <version>${fmt-maven-plugin.version}</version>
        </plugin>
        <!-- Gitリビジョン情報 -->
        <plugin>
          <groupId>pl.project13.maven</groupId>
          <artifactId>git-commit-id-plugin</artifactId>
          <version>${git-commit-id-plugin.version}</version>
        </plugin>
        <!-- カバレッジ -->
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco-maven-plugin.version}</version>
        </plugin>
        <!-- コンパイラ -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
        </plugin>
        <!-- デプロイ -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>${maven-deploy-plugin.version}</version>
        </plugin>
        <!-- ビルドルール -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>${maven-enforcer-plugin.version}</version>
        </plugin>
        <!-- Integration Test -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${maven-failsafe-plugin.version}</version>
        </plugin>
        <!-- インストール -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>${maven-install-plugin.version}</version>
        </plugin>
        <!-- jar -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven-jar-plugin.version}</version>
        </plugin>
        <!-- リソースファイル -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven-resources-plugin.version}</version>
        </plugin>
        <!-- sources.jar -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>${maven-source-plugin.version}</version>
        </plugin>
        <!-- Unit Test -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
        </plugin>
        <!-- war -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>${maven-war-plugin.version}</version>
        </plugin>
        <!-- Spring Boot -->
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <version>${spring-boot.version}</version>
        </plugin>
        <!-- バージョン確認 -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>${versions-maven-plugin.version}</version>
        </plugin>
        <!-- XMLファイルの整形 -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>xml-maven-plugin</artifactId>
          <version>${xml-maven-plugin.version}</version>
        </plugin>
        <!-- 変更影響のあるモジュールのみビルド -->
        <plugin>
          <groupId>com.lesfurets</groupId>
          <artifactId>partial-build-plugin</artifactId>
          <version>${partial-build-plugin.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
        <inherited>false</inherited>
        <executions>
          <execution>
            <!-- Flatten and simplify our own POM for install/deploy -->
            <id>flatten</id>
            <phase>process-resources</phase>
            <goals>
              <goal>flatten</goal>
            </goals>
            <configuration>
              <updatePomFile>true</updatePomFile>
              <flattenMode>bom</flattenMode>
              <pomElements>
                <pluginManagement>keep</pluginManagement>
                <properties>keep</properties>
                <repositories>remove</repositories>
              </pomElements>
            </configuration>
          </execution>
          <execution>
            <id>flatten-clean</id>
            <phase>clean</phase>
            <goals>
              <goal>clean</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>xml-maven-plugin</artifactId>
        <inherited>false</inherited>
        <executions>
          <execution>
            <!-- Cleanup the flattened project POM -->
            <id>post-process-flattened-pom</id>
            <phase>process-resources</phase>
            <goals>
              <goal>transform</goal>
            </goals>
            <configuration>
              <transformationSets>
                <transformationSet>
                  <dir>${project.basedir}</dir>
                  <outputDir>${project.basedir}</outputDir>
                  <includes>.flattened-pom.xml</includes>
                  <stylesheet>src/main/xslt/post-process-flattened-pom.xsl</stylesheet>
                  <outputProperties>
                    <outputProperty>
                      <name>indent</name>
                      <value>yes</value>
                    </outputProperty>
                  </outputProperties>
                </transformationSet>
              </transformationSets>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
